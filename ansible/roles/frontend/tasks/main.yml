# Обновление пакетов системы
- name: updating packages
  apt:
    update_cache: yes
    cache_valid_time: 3600
    upgrade: yes
  become: true

# Установка nginx
- name: install nginx
  apt:
    pkg:
    - nginx
  become: true

# Добавление сервисного пользователя для фронтенда
- name: frontend service account setup
  user:
    name: "{{ frontend_service_user }}"
    create_home: no
    shell: /sbin/nologin
  become: true

# Создание рабочей директории
- name: Create directory for frontend files
  file:
    path: "{{ frontend_working_directory }}"
    state: directory
    group: "{{ frontend_service_user }}"
    owner: "{{ frontend_service_user }}"
    recurse: true
    mode: 0755
  become: true

# Скачивание архива со статикой из хранилища nexus
- name: download frontend archive file from nexus
  get_url:
    username: "{{ nexus_username }}"
    password:  "{{ nexus_password }}"
    dest: "{{ frontend_working_directory }}"
    url: "https://nexus.praktikum-services.tech/repository/std-026-35-frontend2/{{ nexus_archive_version }}/sausage-store-{{ nexus_archive_version }}.tar.gz"
  become: true

# Извлечение файлов из архива
- name: extracting frontend files
  unarchive:
    src: "{{ frontend_working_directory }}sausage-store-{{ nexus_archive_version }}.tar.gz"
    dest: "{{ frontend_working_directory }}"
    remote_src: yes
    owner: "{{ frontend_service_user }}"
    group: "{{ frontend_service_user }}"
  become: true

# Создание nginx sausage-store.conf файла из шаблона j2
- name: create sausage-store.conf
  template:
    src: sausage-store.j2
    dest: "/etc/nginx/sites-available/sausage-store.conf"
  become: true

# Удаление старой символьной ссылки
- name: remove old symbolic link
  command: rm -rf /etc/nginx/sites-enabled/sausage-store.conf
  become: true  

# Создание символьной ссылки в директорию sites-enabled
- name: create a symbolic link
  file:
    src: "/etc/nginx/sites-available/sausage-store.conf"
    dest: "/etc/nginx/sites-enabled/sausage-store.conf"
    state: link
    force: yes
  become: true

# Перезагрузка сервиса nginx
- name: restarting nginx.service
  service:
    name: nginx
    state: restarted
  become: true
